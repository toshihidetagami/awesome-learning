{"version":3,"sources":["webpack:///./src/components/shared/SectionTitle/SectionTitle.js","webpack:///./src/components/shared/SectionTitle/index.js","webpack:///./src/components/shared/Block/Block.js","webpack:///./src/components/shared/Block/index.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/shared/ContentSection/ContentSection.js","webpack:///./src/components/shared/ContentSection/index.js","webpack:///./src/utils/analyticsEventHandler.js","webpack:///./src/components/LessonButton/LessonButton.js","webpack:///./src/components/Lesson/Lesson.js","webpack:///./src/templates/lesson-template.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["SectionTitle","props","sectionTitleClasses","cx","fontSize","textTransform","Heading","headingLevel","Block","mb","className","children","defaultProps","is","mt","ml","mr","RenderedElement","style","marginTop","marginRight","marginBottom","marginLeft","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","ContentSection","title","subTitle","isLight","contentAlignment","titleAlignment","headerClasses","contentClasses","analyticsEventHandler","eventCategory","eventLabel","window","gtag","Error","event_category","event_label","handleEventClick","path","error","console","PrimitiveLessonButton","onClick","lessonData","setLastLessonVisited","useLastLessonContext","href","rel","target","PureLessonButton","data","defaultTab","fullPath","site","siteMetadata","repoOwner","repoName","LessonButton","query","render","Lesson","lesson","slug","frontmatter","description","timeToCompletion","videoLinks","readingLinks","preReadQuizLink","preReadQuiz","course","secondaryExerciseUrl","descriptionParagraphs","courseName","join","StyledLink","variation","map","paragraph","key","link","data-testid","width","height","src","frameBorder","allow","allowFullScreen","readingLink","isExternal","LessonTemplate","siteTitle","siteSubtitle","subtitle","markdownRemark","lessonTitle","courseDescription","fields","metaDescription","Layout","Page","url","this"],"mappings":"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","file":"component---src-templates-lesson-template-js-ee0b3e8179ca326c02e7.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Block from '../Block';\nimport './SectionTitle.scss';\n\nconst SectionTitle = (props) => {\n  const sectionTitleClasses = cx('SectionTitle', {\n    'SectionTitle--body': props.fontSize === 'xl',\n    'SectionTitle--uppercase': props.textTransform === true\n  });\n  const Heading = `${props.headingLevel}`;\n  return (\n    <Block mb={props.mb}>\n      <Heading className={sectionTitleClasses}> {props.children} </Heading>\n    </Block>\n  );\n};\n\nSectionTitle.propTypes = {\n  children: PropTypes.string.isRequired,\n  headingLevel: PropTypes.oneOf(['h2', 'h3', 'h4']),\n  fontSize: PropTypes.oneOf(['body', 'large', 'xl']),\n  textTransform: PropTypes.bool,\n  mb: PropTypes.string\n};\n\nSectionTitle.defaultProps = {\n  headingLevel: 'h2',\n  fontSize: 'large',\n  textTransform: false,\n  mb: '0px'\n};\n\nexport default SectionTitle;\n","export { default } from './SectionTitle';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Block = ({\n  is,\n  children,\n  mt,\n  mb,\n  ml,\n  mr\n}) => {\n  const RenderedElement = is;\n  return (\n    <RenderedElement\n      style={{\n        marginTop: `${mt}`,\n        marginRight: `${mr}`,\n        marginBottom: `${mb}`,\n        marginLeft: `${ml}`\n      }}\n    >\n      {children}\n    </RenderedElement>\n  );\n};\n\nBlock.propTypes = {\n  is: PropTypes.string.isRequired,\n  mt: PropTypes.string,\n  mb: PropTypes.string,\n  ml: PropTypes.string,\n  mr: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nBlock.defaultProps = {\n  is: 'div',\n  mb: '0px',\n  mr: '0px',\n  mt: '0px',\n  ml: '0px'\n};\n\nexport default Block;\n","export { default } from './Block';","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport SectionTitle from \"../SectionTitle\";\nimport './ContentSection.scss';\n\nconst ContentSection = ({\n  className,\n  children,\n  title,\n  subTitle,\n  isLight,\n  contentAlignment,\n  titleAlignment\n}) => {\n  const headerClasses = cx('ContentSection-title', {\n    'ContentSection-title--alignCenter': titleAlignment === 'center',\n    'ContentSection-title--alignLeft': titleAlignment === 'left',\n    'ContentSection-title--textLight': isLight\n  });\n  const contentClasses = cx(`ContentSection-content ${className}`, {\n    'ContentSection-content--alignCenter': contentAlignment === 'center',\n    'ContentSection-content--alignLeft': contentAlignment === 'left'\n  });\n\n  return (\n    <div className=\"ContentSection\">\n      {title && (\n        <header className={headerClasses}>\n          <SectionTitle>{title}</SectionTitle>\n          {subTitle && <SectionTitle>{subTitle}</SectionTitle>}\n        </header>\n      )}\n      <div className={contentClasses}>{children}</div>\n    </div>\n  );\n};\n\nContentSection.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isLight: PropTypes.bool,\n  contentAlignment: PropTypes.oneOf(['left', 'center']),\n  titleAlignment: PropTypes.oneOf(['left', 'center'])\n};\n\nContentSection.defaultProps = {\n  className: '',\n  title: null,\n  subTitle: null,\n  contentAlignment: 'left',\n  titleAlignment: 'left',\n  isLight: false\n};\n\nexport default ContentSection;\n","export { default } from './ContentSection';","const analyticsEventHandler = (eventCategory = \"exercise click\", eventLabel) => {\n  if (window.gtag) {\n    window.gtag(\"event\", \"click\", {\n      event_category: eventCategory,\n      event_label: eventLabel\n    });\n  } else {\n    throw new Error('there is no gtag here')\n  }\n};\n\nexport default analyticsEventHandler;","import React from 'react';\nimport {graphql, StaticQuery} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {useLastLessonContext} from '../../providers/LastLessonProvider';\nimport analyticsEventHandler from '../../utils/analyticsEventHandler';\nimport './LessonButton.scss';\n\nconst handleEventClick = path => {\n  try {\n    analyticsEventHandler('exercise click', path);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const PrimitiveLessonButton = ({\n  path,\n  onClick = handleEventClick,\n  children,\n  lessonData\n}) => {\n  const {setLastLessonVisited} = useLastLessonContext();\n  return (\n    <a\n      href={path}\n      className=\"LessonButton-link\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      onClick={() => {\n        if (lessonData) setLastLessonVisited(lessonData);\n        onClick(path);\n      }}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport const PureLessonButton = ({path, data, defaultTab, ...props}) => {\n  const {repoOwner} = data.site.siteMetadata;\n  const fullPath = `https://codesandbox.io/s/github/${repoOwner}/awesome-learning-exercises/tree/master/${path}?fontsize=14&previewwindow=${defaultTab}`;\n  return (\n    <PrimitiveLessonButton\n      path={fullPath}\n      onClick={handleEventClick}\n      {...props}\n    >\n      Click here to start your exercises!\n    </PrimitiveLessonButton>\n  );\n};\n\nconst LessonButton = props => (\n  <StaticQuery\n    query={graphql`\n      query LessonButtonQuery {\n        site {\n          siteMetadata {\n            repoName\n            repoOwner\n          }\n        }\n      }\n    `}\n    render={data => (\n      <PureLessonButton data={data} {...props} onClick={handleEventClick} />\n    )}\n  />\n);\n\nPureLessonButton.propTypes = {\n  path: PropTypes.string.isRequired,\n  repoName: PropTypes.string,\n  repoOwner: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n};\n\nPureLessonButton.defaultProps = {\n  repoName: 'awesome-learning',\n  repoOwner: 'wayfair',\n  onClick() {}\n};\n\nexport default LessonButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledLink from '../shared/StyledLink';\nimport Block from '../shared/Block';\nimport LessonButton, {PrimitiveLessonButton} from '../LessonButton';\nimport ContentSection from '../shared/ContentSection';\nimport './lesson.scss';\n\nconst Lesson = ({lesson, slug}) => {\n  const {\n    title,\n    description,\n    timeToCompletion,\n    videoLinks,\n    readingLinks,\n    preReadQuizLink,\n    preReadQuiz,\n    course,\n    defaultTab,\n    secondaryExerciseUrl\n  } = lesson.frontmatter;\n\n  // Split the description into different paragraphs based on new lines\n  const descriptionParagraphs = description.split(/\\r?\\n\\n/);\n  const path = slug.toLowerCase().split('/courses/')[1];\n  const courseName = course.split('-').join(' ');\n  return (\n    <div className=\"Lesson\"> \n      \n      <div className=\"Lesson-homeButton\">\n        <StyledLink variation=\"tertiary\" path={`/courses/${course}/`}>\n          Back to {courseName}\n        </StyledLink>\n      </div>\n\n      <ContentSection title={title}>\n        {timeToCompletion && (\n          <p>\n            ⌛ Average time to completion ={' '}\n            <span className=\"Lesson-time\">{timeToCompletion} ⌛</span>\n          </p>\n        )}\n        {descriptionParagraphs.map((paragraph, key) => (\n          <Block is=\"p\" key={key} mb=\"16px\">\n            {paragraph}\n          </Block>\n        ))}\n      </ContentSection>\n\n      <ContentSection\n        title=\" \"\n        subTitle=\"Pre-Session Learning Materials (required)\"\n      >\n        <Block is=\"p\" mb=\"16px\">\n          Check out this content before your session begins to get an idea of\n          what you will be working on.\n        </Block>\n        {videoLinks &&\n          videoLinks.map(link => (\n            <iframe\n              data-testid={link}\n              key={link}\n              width=\"100%\"\n              height=\"315\"\n              src={link}\n              frameBorder=\"0\"\n              allow=\"autoplay; encrypted-media\"\n              allowFullScreen\n            />\n          ))}\n      </ContentSection>\n\n      {readingLinks && (\n        <ContentSection title=\" \" subTitle=\"Pre-read Materials\">\n          <Block is=\"p\" mb=\"16px\">\n            We've curated these resources to give you greater depth on these\n            subjects. Don't feel like you have to read them all.\n          </Block>\n          <Block is=\"p\" mb=\"16px\">\n            Taking the time to go through all of these resources will definitely\n            put you on the road to expert-level knowledge in this subject\n            matter.\n          </Block>\n          <ul className=\"Lesson-readingList\">\n            {readingLinks.map(readingLink => (\n              <li className=\"Lesson-readingListItem\" key={readingLink.title}>\n                <StyledLink\n                  isExternal\n                  variation=\"tertiary\"\n                  path={readingLink.link}\n                >\n                  {readingLink.title}\n                </StyledLink>\n                <p>- {readingLink.description}</p>\n              </li>\n            ))}\n          </ul>\n        </ContentSection>\n      )}\n      {(preReadQuiz || preReadQuizLink) && (\n        <ContentSection title=\" \" subTitle=\"Pre-read Quiz\">\n          <Block is=\"p\" mb=\"16px\">\n            This pre-read quiz is designed to challenge your knowledge of the\n            pre-read material. These quizzes are a great way to check your\n            comprehension, and we highly recommend taking them.\n          </Block>\n          <StyledLink\n            path={preReadQuiz !== null ? `${slug}/quiz` : preReadQuizLink}\n            isExternal={preReadQuiz === null}\n            variation=\"tertiary\"\n            lessonData={lesson}\n          >\n            Quiz Link\n          </StyledLink>\n        </ContentSection>\n      )}\n\n      <ContentSection title=\" \" subTitle=\"Exercises\">\n        {secondaryExerciseUrl ? (\n          <PrimitiveLessonButton\n            path={secondaryExerciseUrl}\n            lessonData={lesson}\n          >\n            Start the Workshop\n          </PrimitiveLessonButton>\n        ) : (\n          <LessonButton\n            defaultTab={defaultTab}\n            path={path}\n            lessonData={lesson}\n          />\n        )}\n      </ContentSection>\n\n      <ContentSection title=\" \" subTitle=\"Session Feedback\">\n        <Block is=\"p\" mb=\"16px\">\n          We need as much feedback as possible to make this platform more\n          effective for you and others like you. Please take a moment to fill\n          out this session survey.\n        </Block>\n        <StyledLink\n          isExternal\n          path=\"https://docs.google.com/forms/d/e/1FAIpQLSeiB_M1YmwwwG9BNhGnd1Nn_BhnzOfHFUDrZGz1PAvm8A1NxA/viewform\"\n          variation=\"tertiary\"\n        >\n          Survey Link\n        </StyledLink>\n      </ContentSection>\n    </div>\n  );\n};\n\nLesson.propTypes = {\n  lesson: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      timeToCompletion: PropTypes.node,\n      videoLinks: PropTypes.array,\n      readingLinks: PropTypes.array,\n      preReadQuizLink: PropTypes.string,\n      preReadQuiz: PropTypes.any,\n      course: PropTypes.string,\n      defaultTab: PropTypes.string,\n      secondaryExerciseUrl: PropTypes.string\n    })\n  }).isRequired,\n  slug: PropTypes.string.isRequired\n}\n\nexport default Lesson;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/shared/Layout';\nimport Lesson from '../components/Lesson';\nimport Page from '../components/shared/Page';\nimport { SITE_METADATA_PROP_TYPE } from '../constants/propTypes';\n\nconst LessonTemplate = ({ data }) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = data.site.siteMetadata;\n\n  const {\n    title: lessonTitle,\n    description: courseDescription\n  } = data.markdownRemark.frontmatter;\n\n  const { slug } = data.markdownRemark.fields;\n\n  const metaDescription = courseDescription !== null ? courseDescription : siteSubtitle;\n\n  return (\n    <Layout\n      title={`${lessonTitle} - ${siteTitle}`}\n      description={metaDescription}\n    >\n      <Page>\n        <Lesson lesson={data.markdownRemark} slug={slug} />\n      </Page>\n    </Layout>\n  );\n};\n\nLessonTemplate.propTypes = {\n  site: SITE_METADATA_PROP_TYPE.isRequired,\n  markdownRemark: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string\n    }),\n    fields: PropTypes.shape({\n      slug: PropTypes.string\n    })\n  })\n};\n\nexport const query = graphql`\n  query LessonBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        subtitle\n        title\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        description\n        course\n        tags\n        title\n        timeToCompletion\n        videoLinks\n        preReadQuizLink\n        defaultTab\n        readingLinks {\n          link\n          description\n          title\n        }\n        secondaryExerciseUrl\n        preReadQuiz {\n          description\n          questions {\n            choices {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default LessonTemplate;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}